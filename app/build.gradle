apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'io.fabric'
// apply from:  rootProject.file('tinkerpatch.gradle')

// 配置keystroe  keystore.properties为本地保存,不上传到svn
/*def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))*/

// keystore.properties 的内容如下
/*
storePassword = 123456
keyPassword = 123456
keyAlias ​​= desktop
storeFile = E:/keystore/test.jks
 */

android {
    compileSdkVersion versions.compileSdk
   // buildToolsVersion  "30.0.0"
    buildToolsVersion  versions.buildTools

    defaultConfig {
        applicationId "com.zgw.qgb"
        minSdkVersion versions.minSdk
        targetSdkVersion  versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        /* javaCompileOptions {
             annotationProcessorOptions {
                 arguments = [moduleName: project.getName()]
             }
         }*/

        // 可以将这些存放到gradle.properties(或者新建一个properties,添加到忽略文件中) 里面。
     /*       signingConfigs {
            release {
                try {
                    storeFile file('E:/keystore/test.jks')
                    storePassword '123456'
                    keyAlias 'desktop'
                    keyPassword '123456'
                } catch (ex) {
                    throw new InvalidUserDataException(ex.toString())
                }
            }
        }

        signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }


        */

        buildFeatures{
            viewBinding = true
        }
    }

    buildTypes {

        release {
            //minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
            shrinkResources true
            //manifestPlaceholders = [fabric_apikey: "cf3dce553f5d21f249f1ea225fd3dc3ade213c08"]
            buildConfigField "String", "BaseUrl", '"https://qgbservices.zgw.com/"'
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            ext.alwaysUpdateBuildId = false
            minifyEnabled false
            //manifestPlaceholders = [fabric_apikey: "cf3dce553f5d21f249f1ea225fd3dc3ade213c08"]
            buildConfigField "String", "BaseUrl", '"http://qgbtest.zgw.com/"'
        }
    }

    sourceSets {
        main {
            res.srcDirs = [
                    "src/main/res/",
                    'src/main/res/layouts/main',
                    'src/main/res/layouts/common',
                    "src/main/res/translations",
                    "src/main/res"
            ]
        }
    }

    /*configurations {
        all*.exclude module: 'annotations'
    }
*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {


    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //kotlin
    implementation deps.kotlin
    //support
    implementation deps.androidx.design
  //  implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation deps.androidx.appCompat
   // implementation deps.androidx.cardview
    implementation deps.androidx.recyclerview
    implementation deps.androidx.v4
    implementation deps.androidx.vectorDrawable
    implementation deps.androidx.constraint
    implementation deps.androidx.multidex
    implementation 'androidx.navigation:navigation-fragment:2.1.0'


    kapt deps.kapt.glide_compiler
    implementation deps.retrofit.core
    implementation deps.retrofit.converter_gson
    implementation deps.retrofit.converter_moshi
    implementation deps.retrofit.rxjava3
    //network
    implementation deps.okhttp.core
    implementation deps.okhttp.logger
    implementation deps.glide.core
    implementation deps.glide.okhttp
    kapt deps.kapt.glide_compiler

    implementation deps.materialDialogs, { exclude group: 'com.android.support' }
    implementation deps.toasty, { exclude group: 'com.android.support' }
    implementation deps.SmartRefreshLayout
    implementation deps.bottomNavigationBar

    /*implementation 'it.sephiroth.android.library.bottomnavigation:bottom-navigation:2.0.2'*/
    //implementation "frankiesardo:icepick:${icepickVersion}"
    //kapt "frankiesardo:icepick-processor:${icepickVersion}"

    //rx3
    implementation deps.rx3.core
    implementation deps.rx3.android

    implementation deps.rxlifecycle4.core
    implementation deps.rxlifecycle4.android
    implementation deps.rxlifecycle4.components




    implementation deps.greendao

    //tool
    implementation deps.timber
    implementation deps.statusbarutil
    implementation deps.icepick
    kapt deps.kapt.icepick_processor
    implementation deps.gson
    implementation deps.moshi
    implementation deps.stream
    implementation deps.threetenabp
    implementation deps.arouter
    kapt deps.kapt.arouter_compiler

    implementation deps.butterKnife.runtime
    kapt deps.kapt.butterknife_compiler

    implementation deps.tinker.core
    //compileOnly deps.tinker.anno
    //annotationProcessor deps.kapt.tinker_processor

    debugImplementation deps.leakCanary.real
   // releaseImplementation deps.leakCanary.noOp
    testImplementation deps.junit
    androidTestImplementation deps.junit
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.runner



    //implementation 'com.alibaba:arouter-annotation:1.0.4'
    /* implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }*/

    //implementation "com.android.support:preference-v7:${supportVersion}"
    //implementation "com.android.support:customtabs:${supportVersion}"
    //implementation 'org.greenrobot:eventbus:3.0.0'
    //compileOnly "org.projectlombok:lombok:${lombokVersion}" //AutoValue
    //kapt "org.projectlombok:lombok:${lombokVersion}"
    //androidTestImplementation 'com.android.support.test:runner:1.0.0'
    /* compile 'com.github.matthiasrobbers:shortbread:1.0.1'
                    annotationProcessor 'com.github.matthiasrobbers:shortbread-compiler:1.0.1'*/

    /*implementation 'com.evernote:android-state:1.1.4'///Icepick
    annotationProcessor "com.evernote:android-state-processor:1.1.4"*/
    //compile "org.parceler:parceler-api:1.0.4"
    //apt "org.parceler:parceler:1.0.4"

    //compile 'skin.support:skin-support:2.2.3'                   // skin-support 基础控件支持
    //compile 'skin.support:skin-support-design:2.2.3'            // skin-support-design material design 控件支持[可选]
    //compile 'skin.support:skin-support-cardview:2.2.3'          // skin-support-cardview CardView 控件支持[可选]
    /// compile 'skin.support:skin-support-constraint-layout:2.2.3' // skin-support-constraint-layout ConstraintLayout 控件支
}
// 该文件需要获取 versionName的值，故需要保证在defaultConfig {} 函数完成后 调用
// apply from: 'tinkerpatch.gradle'
